{
  "permissions": {
    "allow": [
      "Bash(kubectl logs:*)",
      "Bash(kubectl get:*)",
      "Bash(kubectl describe:*)",
      "Bash(kubectl exec:*)",
      "Bash(docker pull:*)",
      "Bash(docker inspect:*)",
      "Bash(kubectl run:*)",
      "Bash(kubectl delete:*)",
      "Bash(grep:*)",
      "Bash(git checkout:*)",
      "Bash(rm:*)",
      "Bash(kubectl kustomize:*)",
      "Bash(find:*)",
      "Bash(kubectl patch:*)",
      "Bash(kubectl apply:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(git push:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(op item edit:*)",
      "Bash(ls:*)",
      "Bash(snap list:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(export PATH=$PATH:~/.local/bin)",
      "Bash(kubectl version --client)",
      "Bash(kubectl config get-contexts)",
      "Bash(kubectl get pods -n onepassword-operator -l app=onepassword-operator)",
      "Bash(kubectl get onepassworditem -A)",
      "Bash(kubectl get namespaces)",
      "Bash(kubectl get pods -A)",
      "Bash(kubectl rollout restart deployment/onepassword-connect-operator -n 1password)",
      "Bash(kubectl get onepassworditem grill-stats-prod-creds-1password -n grill-monitoring -o yaml)",
      "Bash(kubectl get secret grill-stats-prod-creds-1password -n grill-monitoring -o yaml)",
      "Bash(op item get:*)",
      "Bash(kubectl get secret grill-stats-prod-creds-1password -n grill-monitoring -o jsonpath='{.metadata.annotations.operator\\.1password\\.io/item-version}')",
      "Bash(kubectl wait --for=condition=ready pod -l app=onepassword-connect-operator -n 1password --timeout=60s)",
      "Bash(kubectl get pods -n 1password -l app.kubernetes.io/name=onepassword-connect-operator)",
      "Bash(kubectl get pods -n grill-monitoring)",
      "Bash(kubectl describe pod -n grill-monitoring -l app=grill-stats-db)",
      "Bash(kubectl logs grill-stats-db-1-initdb-4kcnh -n grill-monitoring)",
      "Bash(kubectl logs grill-stats-db-1-initdb-m7zh7 -n grill-monitoring)",
      "Bash(kubectl get pods -n cnpg-system)",
      "Bash(kubectl get cluster grill-stats-db -n grill-monitoring -o yaml)",
      "Bash(kubectl get secret grill-monitoring-db-credentials-1password -n grill-monitoring -o yaml)",
      "Bash(kubectl get events -n grill-monitoring --sort-by=.metadata.creationTimestamp)",
      "Bash(kubectl describe quota grill-monitoring-quota -n grill-monitoring)",
      "Bash(kubectl top pods -n grill-monitoring --no-headers)",
      "Bash(kubectl get pods -n grill-monitoring -o custom-columns=NAME:.metadata.name,CPU_LIMIT:.spec.containers[*].resources.limits.cpu,MEMORY_LIMIT:.spec.containers[*].resources.limits.memory)",
      "Bash(kubectl delete job grill-stats-db-1-initdb -n grill-monitoring)",
      "Bash(kubectl get deployments -n grill-monitoring)",
      "Bash(kubectl get cluster grill-stats-db -n grill-monitoring -o jsonpath='{.status.phase}')",
      "Bash(echo)",
      "Bash(kubectl get pods -n grill-monitoring -l cnpg.io/cluster=grill-stats-db)",
      "Bash(kubectl logs grill-stats-db-1-initdb-gqrww -n grill-monitoring -c initdb)",
      "Bash(kubectl logs grill-stats-db-1-initdb-gqrww -n grill-monitoring -c initdb --tail=20)",
      "Bash(kubectl rollout restart deployment/cnpg-cloudnative-pg -n cnpg-system)",
      "Bash(kubectl delete pod grill-stats-db-1-initdb-gqrww -n grill-monitoring)",
      "Bash(op item create:*)",
      "Bash(op signin:*)",
      "Bash(op whoami:*)",
      "Bash(env)",
      "Bash(export OP_SESSION_lordmuffin=$OP_SESSION_AME44NJWUJHQDLDWQ63MPVBWTI)",
      "WebFetch(domain:docs.anthropic.com)",
      "Bash(export:*)",
      "Bash(kubectl version:*)",
      "Bash(pkill:*)",
      "Bash(chmod:*)",
      "Bash(kubectl get pod grill-stats-db-1-initdb-k7t6w -n grill-stats-dev)",
      "Bash(kubectl get pod grill-stats-db-1-initdb-k7t6w -n grill-stats)",
      "Bash(kubectl describe pod grill-stats-db-1-initdb-k7t6w -n grill-stats)",
      "Bash(kubectl get pvc -n grill-stats)",
      "Bash(kubectl get cluster -n grill-stats)",
      "Bash(kubectl get events -n grill-stats)",
      "Bash(kubectl describe cluster grill-stats-db -n grill-stats)",
      "Bash(kubectl get pv)",
      "Bash(kubectl get sc)",
      "Bash(kubectl get clusterinformation -A)",
      "Bash(kubectl get secret grill-stats-db-credentials-1password -n grill-stats)",
      "Bash(kubectl get onepassworditem grill-stats-db-credentials-1password -n grill-stats)",
      "Bash(kubectl describe onepassworditem grill-stats-db-credentials-1password -n grill-stats)",
      "Bash(kubectl get jobs -n grill-stats)",
      "Bash(kubectl describe pod grill-stats-db-1-initdb-9m8fn -n grill-stats)",
      "Bash(kubectl logs grill-stats-db-1-initdb-9m8fn -n grill-stats -c initdb)",
      "Bash(kubectl logs grill-stats-db-1-initdb-9m8fn -n grill-stats -c bootstrap-controller)",
      "Bash(kubectl get pvc grill-stats-db-1 -n grill-stats)",
      "Bash(kubectl get cluster grill-stats-db -n grill-stats)",
      "Bash(kubectl get networkpolicies -n grill-stats)",
      "Bash(kubectl describe networkpolicy allow-api-server-access -n grill-stats)",
      "Bash(kubectl get pod -n grill-stats network-test)",
      "Bash(kubectl exec -n grill-stats network-test -- ping -c 4 10.21.0.1)",
      "Bash(kubectl exec -n grill-stats network-test -- nslookup kubernetes.default.svc)",
      "Bash(kubectl exec -n grill-stats network-test -- cat /etc/resolv.conf)",
      "Bash(kubectl exec -n grill-stats network-test -- ping -c 4 10.21.0.10)",
      "Bash(kubectl exec -n grill-stats network-test -- ping -c 4 8.8.8.8)",
      "Bash(kubectl exec -n grill-stats network-test -- ip a)",
      "Bash(kubectl exec -n grill-stats network-test -- ip route)",
      "Bash(kubectl get pods -n kube-system)",
      "Bash(kubectl describe networkpolicy default-deny-all -n grill-stats)",
      "Bash(kubectl describe networkpolicy allow-internal-communication -n grill-stats)",
      "Bash(kubectl get ciliumnetworkpolicies -n grill-stats)",
      "Bash(kubectl logs -n cnpg-system -l app.kubernetes.io/name=cloudnative-pg --tail 100)",
      "Bash(kubectl delete pod -n grill-stats network-test)",
      "Bash(kubectl -n kube-system get configmap cilium-config -o yaml)",
      "Bash(kubectl -n kube-system exec -it ds/cilium -- cilium status)",
      "Bash(kubectl -n kube-system exec -it ds/cilium -- cilium connectivity test)",
      "Bash(kubectl -n kube-system exec -it ds/cilium -- cilium policy get)",
      "Bash(kubectl get pods -n grill-stats -l job-name=grill-stats-db-1-initdb)",
      "Bash(kubectl logs -n grill-stats -l job-name=grill-stats-db-1-initdb -c bootstrap-controller --tail 20 --follow)",
      "Bash(kubectl logs -n grill-stats -l job-name=grill-stats-db-1-initdb -c bootstrap-controller --tail 20)",
      "Bash(kubectl logs -n grill-stats -l job-name=grill-stats-db-1-initdb -c initdb --tail 20)",
      "Bash(kubectl get pods -n grill-stats -l cnpg.io/cluster=grill-stats-db)",
      "Bash(kubectl logs -n grill-stats grill-stats-db-1 -c bootstrap-controller)",
      "Bash(kubectl describe pod grill-stats-db-1 -n grill-stats)",
      "Bash(kubectl describe pod grill-stats-5f65698b89-x5sq2 -n grill-stats)",
      "Bash(kubectl get pods -n grill-stats -l app=grill-stats)",
      "Bash(kubectl describe pod grill-stats-5f65698b89-p9xtb -n grill-stats)",
      "Bash(kubectl logs grill-stats-5f65698b89-p9xtb -n grill-stats)",
      "Bash(kubectl get service -n grill-stats)",
      "Bash(kubectl exec -n grill-stats grill-stats-5f65698b89-p9xtb -- sh -c \"nslookup grill-stats-db.grill-stats.svc.cluster.local\")",
      "Bash(kubectl exec -n grill-stats grill-stats-5f65698b89-p9xtb -- sh -c \"cat /etc/hosts\")",
      "Bash(kubectl exec -n grill-stats grill-stats-5f65698b89-p9xtb -- sh -c \"ping -c 1 grill-stats-db-rw.grill-stats.svc.cluster.local\")",
      "Bash(kubectl get pods -n grill-stats)",
      "Bash(cp:*)",
      "Bash(kubectl rollout restart deployment grill-stats -n grill-stats)",
      "Bash(kubectl logs -n grill-stats deployment/grill-stats --tail=20)",
      "Bash(kubectl set env --all -n grill-stats deployments --list)",
      "Bash(kubectl get deployment -n grill-stats grill-stats -o yaml)",
      "Bash(kubectl exec -n grill-stats deployment/grill-stats -- sh -c \"cat /etc/resolv.conf\")",
      "Bash(kubectl run -n grill-stats netshoot --image=nicolaka/netshoot --rm -it --restart=Never -- bash -c \"ping -c 1 grill-stats-db-rw.grill-stats.svc.cluster.local\")",
      "Bash(kubectl run:*)",
      "Bash(kubectl wait --for=condition=Ready pod/netshoot -n grill-stats --timeout=60s)",
      "Bash(kubectl exec -n grill-stats netshoot -- ping -c 1 grill-stats-db-rw.grill-stats.svc.cluster.local)",
      "Bash(kubectl apply -f /mnt/c/Users/lordmuffin/Git/homelab/apps/services/grill-stats/base/networkpolicy/db-policy.yaml)",
      "Bash(kubectl delete pod netshoot -n grill-stats)",
      "Bash(kubectl get secret grill-stats-prod-creds-1password -n grill-stats -o jsonpath='{.data}')",
      "Bash(kubectl get secret grill-stats-prod-creds-1password -n grill-stats -o jsonpath='{.metadata.annotations}')",
      "Bash(kubectl describe pod grill-stats-db-1-initdb-zlfjh -n grill-stats)",
      "Bash(kubectl get pods -n grill-stats -o wide)",
      "Bash(kubectl logs -n grill-stats grill-stats-84bd9c5bff-6v7cg)",
      "Bash(kubectl exec -n grill-stats grill-stats-db-1 -- psql -c \"\\du\")",
      "Bash(kubectl logs -n grill-stats grill-stats-9fdb8666d-j4fl7)",
      "Bash(kubectl describe pod -n grill-stats -l app=grill-stats)",
      "Bash(kubectl wait --for=condition=Ready pod/db-test -n grill-stats --timeout=60s)",
      "Bash(kubectl exec -n grill-stats db-test -- psql -h grill-stats-db-rw -U \"grill-stats\" -d grill-stats -c \"SELECT 1;\" -W)",
      "Bash(kubectl exec -n grill-stats db-test -- sh -c \"curl -v telnet://grill-stats-db-rw:5432\")",
      "Bash(kubectl exec -n grill-stats grill-stats-9fdb8666d-j4fl7 -- sh -c \"cat /var/log/app.log\")",
      "Bash(kubectl logs -n grill-stats grill-stats-9fdb8666d-cddt7)",
      "Bash(kubectl exec -n grill-stats grill-stats-9fdb8666d-cddt7 -- sh -c \"netstat -tuln\")",
      "Bash(kubectl exec -n grill-stats grill-stats-9fdb8666d-cddt7 -- sh -c \"ls -la /proc/*/fd/* 2>/dev/null | grep socket\")",
      "Bash(kubectl describe pod -n grill-stats grill-stats-9fdb8666d-cddt7)",
      "Bash(kubectl cp:*)",
      "Bash(cat:*)",
      "Bash(/home/lordmuffin/.local/bin/kubectl get pods -n grill-stats)",
      "Bash(kubectl rollout restart:*)",
      "Bash(curl:*)",
      "Bash(nslookup:*)",
      "Bash(dig:*)",
      "Bash(touch:*)",
      "Bash(./scripts/test-validation-scripts.sh:*)",
      "Bash(./scripts/validate-production.sh:*)",
      "Bash(sudo apt:*)",
      "Bash(sudo apt install:*)",
      "Bash(kubectl config:*)",
      "Bash(kubectl:*)",
      "Bash(sed:*)",
      "Bash(bash:*)",
      "Bash(awk:*)",
      "Bash(python3:*)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config config get-contexts)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab cluster-info)",
      "Bash(kubectl config use-context healing-organics-cloud-homelab)",
      "Bash(kubectl config use-context healing-organics-cloud-homelab)",
      "Bash(kubectl get applications -A)",
      "Bash(kubectl get pods -n 1password --selector=app.kubernetes.io/name=connect)",
      "Bash(kubectl describe application grill-stats -n argocd)",
      "Bash(kubectl get pods -n 1password)",
      "Bash(kubectl describe application grill-stats-dev -n argocd)",
      "Bash(kubectl get OnePasswordItem -n grill-stats)",
      "Bash(kubectl kustomize . --dry-run=client)",
      "Bash(kubectl describe OnePasswordItem grill-stats-db-credentials-1password -n grill-stats)",
      "Bash(kubectl kustomize .)",
      "Bash(kubectl get pods -n argocd -l app.kubernetes.io/name=argocd-server)",
      "Bash(kubectl describe OnePasswordItem grill-stats-prod-creds-1password -n grill-stats)",
      "Bash(kubectl get pods -n argocd -l app.kubernetes.io/name=argocd-application-controller)",
      "Bash(kubectl get secrets -n grill-stats)",
      "Bash(kubectl logs -n argocd argocd-application-controller-0 --tail=20)",
      "Bash(kubectl kustomize . --load-restrictor=LoadRestrictionsNone --debug)",
      "Bash(kubectl describe secret grill-stats-db-credentials-1password -n grill-stats)",
      "Bash(kubectl get pods -n argocd -l app.kubernetes.io/name=argocd-repo-server)",
      "Bash(kubectl describe secret grill-stats-prod-creds-1password -n grill-stats)",
      "Bash(kubectl logs -n argocd argocd-repo-server-65f58758c5-559cs --tail=20)",
      "Bash(kubectl logs deployment/onepassword-connect-operator -n 1password --tail=20)",
      "Bash(kubectl logs pod/onepassword-connect-5f859bbf48-5c7t7 -n 1password -c connect --tail=10)",
      "Bash(kubectl describe pod onepassword-connect-5f859bbf48-5c7t7 -n 1password)",
      "Bash(kubectl patch application grill-stats -n argocd -p '{\"\"operation\"\":{\"\"sync\"\":{}}}' --type merge)",
      "Bash(kubectl logs pod/onepassword-connect-5f859bbf48-5c7t7 -n 1password -c connect-api --tail=10)",
      "Bash(kubectl get repositories -n argocd)",
      "Bash(kubectl logs pod/onepassword-connect-5f859bbf48-5c7t7 -n 1password -c connect-sync --tail=10)",
      "Bash(yamllint:*)",
      "Bash(kubectl get appprojects -n argocd)",
      "Bash(kubectl get events -n grill-stats --field-selector involvedObject.kind=OnePasswordItem --sort-by='.lastTimestamp')",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get pods -A)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get onepassworditems -A)",
      "Bash(kubectl get pods -n argocd)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get onepassworditems -n grill-stats -o wide)",
      "Bash(kubectl logs -n argocd argocd-server-7fdd78887b-vtcdd --tail=50)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab describe onepassworditems -n grill-stats)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get secrets -n grill-stats)",
      "Bash(kubectl logs -n argocd argocd-application-controller-0 --tail=50)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config kustomize apps/argocd/grill-stats/base --validate=false)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab logs -n 1password deployment/onepassword-connect-operator --tail=20)",
      "Bash(kubectl logs -n argocd argocd-application-controller-0 --tail=100)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config kustomize apps/argocd/grill-stats/base)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab logs -n 1password deployment/onepassword-connect --tail=10)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config kustomize apps/argocd/grill-stats/overlays/dev-lab)",
      "Bash(kubectl logs -n argocd argocd-repo-server-65f58758c5-559cs --tail=50)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab logs -n 1password deployment/onepassword-connect -c connect-sync --tail=10)",
      "Bash(kubectl get secrets -n argocd)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config kustomize apps/argocd/grill-stats/overlays/prod-lab)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get pods -n grill-stats)",
      "Bash(kubectl patch application grill-stats -n argocd --type merge -p='{\"\"operation\"\":{\"\"sync\"\":{\"\"revision\"\":\"\"HEAD\"\"}}}')",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get secret grill-stats-db-credentials-1password -n grill-stats -o jsonpath='{.data}')",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get secret grill-stats-prod-creds-1password -n grill-stats -o jsonpath='{.data}')",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get events -n grill-stats --sort-by='.lastTimestamp')",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab logs -n 1password deployment/onepassword-connect-operator --tail=50)",
      "Bash(kubectl patch application grill-stats-dev -n argocd --type merge -p='{\"\"operation\"\":{\"\"sync\"\":{\"\"revision\"\":\"\"HEAD\"\"}}}')",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get onepassworditems -n grill-stats -o yaml)",
      "Bash(kubectl get crd)",
      "Bash(kubectl get application grill-stats -n argocd -o yaml)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get deployment grill-stats -n grill-stats -o yaml)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab describe deployment grill-stats -n grill-stats)",
      "Bash(kubectl patch application grill-stats -n argocd --type merge -p='{\"\"metadata\"\":{\"\"annotations\"\":{\"\"argocd.argoproj.io/refresh\"\":\"\"hard\"\"}}}')",
      "Bash(kubectl patch application grill-stats-dev -n argocd --type merge -p='{\"\"metadata\"\":{\"\"annotations\"\":{\"\"argocd.argoproj.io/refresh\"\":\"\"hard\"\"}}}')",
      "Bash(kubectl get pods -n grill-stats)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config apply --dry-run=client -f apps/argocd/grill-stats/base/grill-stats-core-services.yaml -f apps/argocd/grill-stats/base/grill-stats-databases.yaml -f apps/argocd/grill-stats/base/grill-stats-monitoring.yaml -f apps/argocd/grill-stats/base/grill-stats-platform.yaml -f apps/argocd/grill-stats/base/grill-stats-project.yaml -f apps/argocd/grill-stats/base/grill-stats-secrets.yaml)",
      "Bash(kubectl get ingress -n grill-stats)",
      "Bash(kubectl get applications -n argocd)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config apply --dry-run=client -f apps/argocd/base/grill-monitoring-backup.yaml)",
      "Bash(kubectl logs -n argocd argocd-repo-server-65f58758c5-559cs --tail=100)",
      "Bash(kubectl logs -n argocd argocd-application-controller-0 --tail=200)",
      "Bash(kubectl get applications -n argocd -o wide)",
      "Bash(kubectl kustomize apps/services/grill-stats/overlays/dev)",
      "Bash(kubectl kustomize apps/services/grill-stats/base)",
      "Bash(kubectl kustomize apps/services/grill-stats/overlays/dev --dry-run=client)",
      "Bash(kubectl kustomize apps/services/grill-stats/base/core-services)",
      "Bash(kubectl kustomize apps/services/grill-stats/overlays/prod)",
      "Bash(kubectl describe pod data-processing-service-7b45b9d96-c6zdj -n grill-stats)",
      "Bash(kubectl describe pod temperature-service-66f95bdd9c-dc7q4 -n grill-stats)",
      "Bash(kubectl config current-context)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get certificates -A)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get servicemonitors -A)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get cronjobs -A)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get networkpolicies -n grill-stats)",
      "Bash(kubectl get pods -n grill-monitoring -o wide)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get clusterissuers)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get jobs -A)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get namespaces)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get prometheusrules -A)",
      "Bash(kubectl get pods --all-namespaces)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab describe certificate grill-stats-tls -n grill-stats)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get configmaps -A)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get pods -n monitoring)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get cronjobs -n grill-stats)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get namespaces)",
      "Bash(kubectl get deployment data-processing-service -n grill-stats -o yaml)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get jobs -n grill-stats)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get networkpolicy allow-database-access -n grill-stats -o yaml)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab describe clusterissuer letsencrypt-prod)",
      "Bash(kubectl get deployments -n grill-stats -o yaml)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get pods -n grill-stats --show-labels)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get ingress -n grill-stats)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab describe ingress grill-stats -n grill-stats)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get applications -n argocd)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get namespace monitoring --show-labels)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get applications -n argocd)",
      "Bash(kubectl get deployment grill-stats -n grill-stats -o yaml)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get pods -n cert-manager)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get pods -n monitoring -l app.kubernetes.io/name=prometheus --show-labels)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get applications -n argocd -o wide)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab describe clusterissuer letsencrypt-production)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get application grill-stats -n argocd -o yaml)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get pods -n monitoring -l app=prometheus --show-labels)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl describe application grill-stats -n argocd)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get pod prometheus-deployment-577c75d8d4-nll7z -n monitoring --show-labels)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get ingress grill-stats -n grill-stats -o yaml)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get service -n monitoring)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab describe certificate lab-apj-dev-tls -n grill-stats)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get applications -n argocd -o yaml)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get service -n grill-stats)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab apply -f /mnt/c/Users/lordmuffin/Git/grill-stats/apps/argocd/grill-stats/base/grill-stats-monitoring.yaml)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get certificaterequests -n grill-stats)",
      "Bash(docker search:*)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get application grill-stats-monitoring -n argocd)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get orders -n grill-stats)",
      "Bash(kubectl get pods -n grill-stats -o wide)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get challenges -n grill-stats)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get pods -n grill-stats)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab describe application grill-stats-monitoring -n argocd)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get secretstores -n grill-stats)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get secret -n grill-stats)",
      "Bash(kubectl get applications grill-stats -n argocd -o yaml)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab apply -f /mnt/c/Users/lordmuffin/Git/grill-stats/apps/argocd/grill-stats/base/grill-stats-project.yaml)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl apply -k kustomize/base/namespace --dry-run=client -o yaml)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl describe secret grill-stats-db-credentials-1password -n grill-stats)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl apply -f kustomize/base/namespace/networkpolicy.yaml --dry-run=client -o yaml)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab patch application grill-stats-monitoring -n argocd --type merge -p '{\"\"operation\"\": {\"\"sync\"\": {}}}')",
      "Bash(kubectl get applications grill-stats -n argocd -o jsonpath='{.spec.source.repoURL}')",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get storageclass)",
      "Bash(kubectl get applications grill-stats -n argocd -o jsonpath='{.spec.source.path}')",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl apply -f kustomize/base/core-services/network-policies.yaml --dry-run=client -o yaml)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get servicemonitors -n grill-stats)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get networkpolicies -n grill-stats -o wide)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get application grill-stats-monitoring -n argocd -o yaml)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab patch appproject grill-stats -n argocd --type json -p '[{\"\"op\"\": \"\"remove\"\", \"\"path\"\": \"\"/spec/signatureKeys\"\"}]')",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl apply -k .)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl -n argocd patch application grill-stats --type merge -p '{\"\"spec\"\":{\"\"syncPolicy\"\":{\"\"syncOptions\"\":[\"\"CreateNamespace=true\"\",\"\"Validate=false\"\"]}}}')",
      "Bash(kubectl get applications grill-stats -n argocd -o jsonpath='{.spec.syncPolicy.automated}')",
      "Bash(kubectl get applications grill-stats -n argocd -o jsonpath='{.status.sync.status}')",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl apply -f kustomize/base/namespace/networkpolicy.yaml --validate=false)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab apply -f /mnt/c/Users/lordmuffin/Git/grill-stats/kustomize/base/core-services/monitoring.yaml -n grill-stats)",
      "Bash(kubectl patch applications grill-stats -n argocd --type merge --patch '{\"\"operation\"\": {\"\"sync\"\": {\"\"revision\"\": \"\"HEAD\"\"}}}')",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get networkpolicy allow-prometheus -n grill-stats -o yaml)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get pvc -n grill-stats)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab apply -f /mnt/c/Users/lordmuffin/Git/grill-stats/kustomize/base/core-services/application-dashboards.yaml -n grill-stats)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get prometheusrules -n grill-stats)",
      "Bash(kubectl get applications grill-stats -n argocd -o jsonpath='{.status.sync.revision}')",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl apply -f kustomize/base/core-services/network-policies.yaml --validate=false)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl delete pvc backup-remote-storage-pvc backup-storage-pvc backup-temp-pvc -n grill-stats)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get configmaps -n grill-stats)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl apply -f storage.yaml)",
      "Bash(kubectl annotate applications grill-stats -n argocd argocd.argoproj.io/refresh=normal --overwrite)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get servicemonitor grill-stats-temperature-service -n grill-stats -o yaml)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl describe pvc backup-storage-pvc -n grill-stats)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get configmap grafana-dashboard-grill-stats-overview -n grill-stats -o yaml)",
      "Bash(kubectl get applications grill-stats -n argocd -o jsonpath='{.status.sourceType}')",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get prometheus -n monitoring -o yaml)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get networkpolicy allow-prometheus -n grill-stats -o jsonpath='{.metadata.name}')",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl create job --from=cronjob/postgresql-backup test-postgresql-backup -n grill-stats)",
      "Bash(kubectl describe applications grill-stats -n argocd)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get namespace grill-stats -o yaml)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab label namespace grill-stats prometheus=enabled)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl describe pod test-postgresql-backup-7trqr -n grill-stats)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get configmap kube-prometheus-grafana-config-dashboards -n monitoring -o yaml)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get configmap kube-prometheus-grafana -n monitoring -o yaml)",
      "Bash(kubectl annotate applications grill-stats -n argocd argocd.argoproj.io/refresh=hard --overwrite)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get deployment kube-prometheus-grafana -n monitoring -o yaml)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl logs test-postgresql-backup-7trqr -n grill-stats)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get servicemonitors,prometheusrules,configmaps -n grill-stats --selector=\"app.kubernetes.io/part-of=grill-stats\")",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl describe job test-postgresql-backup -n grill-stats)",
      "Bash(kubectl get deployment data-processing-service -n grill-stats -o jsonpath='{.spec.template.spec.containers[0].image}')",
      "Bash(kubectl get applications grill-stats -n argocd -o jsonpath='{.status.conditions}')",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl delete job test-postgresql-backup -n grill-stats)",
      "Bash(kubectl get applications grill-stats -n argocd -o jsonpath='{.status.health.status}')",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get application grill-stats -n argocd -o yaml)",
      "Bash(kubectl patch applications grill-stats -n argocd --type merge --patch '{\"\"spec\"\":{\"\"syncPolicy\"\":{\"\"automated\"\":{\"\"prune\"\":true,\"\"selfHeal\"\":true,\"\"allowEmpty\"\":true}}}}')",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl apply -k base/)",
      "Bash(kubectl get applications grill-stats -n argocd -o jsonpath='{.operation}')",
      "Bash(kubectl patch applications grill-stats -n argocd --type=merge --patch='{\"\"operation\"\": null}')",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl apply -f /mnt/c/Users/lordmuffin/Git/grill-stats/apps/argocd/base/grill-monitoring-backup.yaml)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl describe application grill-stats-backup -n argocd)",
      "Bash(kubectl patch applications grill-stats -n argocd --type=merge --patch='{\"\"operation\"\": {\"\"sync\"\": {\"\"revision\"\": \"\"HEAD\"\", \"\"prune\"\": true}}}')",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl get secrets -n grill-stats)",
      "Bash(KUBECONFIG=/mnt/c/Users/lordmuffin/.kube/config kubectl delete application grill-stats-backup -n argocd)",
      "Bash(kubectl get events -n grill-stats --sort-by=.metadata.creationTimestamp)",
      "Bash(kubectl describe pod data-processing-service-5ccdbdb897-pntb8 -n grill-stats)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab logs -f deployment/temperature-service -n grill-stats)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get pods -n grill-stats -l app=auth-service)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab logs deployment/grill-stats -n grill-stats --tail=30)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab exec -it grill-stats-db-1 -n grill-stats -- psql -U postgres -c \"\\du\")",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab exec grill-stats-db-1 -n grill-stats -- psql -U postgres -c \"CREATE USER grill_monitor WITH PASSWORD ''temp_password_change_me'';\")",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab exec grill-stats-db-1 -n grill-stats -- psql -U postgres -c \"GRANT ALL PRIVILEGES ON DATABASE \"\"grill-stats\"\" TO grill_monitor;\")",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab exec grill-stats-db-1 -n grill-stats -- psql -U postgres -d \"grill-stats\" -c \"GRANT ALL ON SCHEMA public TO grill_monitor;\")",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab rollout restart deployment grill-stats -n grill-stats)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab logs deployment/grill-stats -n grill-stats --tail=10)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab logs deployment/grill-stats -n grill-stats --tail=50)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab exec deployment/grill-stats -n grill-stats -- curl -s http://localhost:5000/login)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab logs deployment/grill-stats -n grill-stats --since=5m)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab logs deployment/grill-stats -n grill-stats --since=10m)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get ingress -n grill-stats -o wide)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab exec deployment/grill-stats -n grill-stats -- python -c \"import app; print([rule.rule for rule in app.app.url_map.iter_rules()])\")",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab logs deployment/grill-stats -n grill-stats --tail=100)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab exec grill-stats-db-1 -n grill-stats -- psql -U postgres -d \"grill-stats\" -c \"\\dt\")",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab logs deployment/grill-stats -n grill-stats --tail=200)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab exec grill-stats-db-1 -n grill-stats -- psql -U postgres -d \"grill-stats\" -c \"SELECT COUNT(*) FROM users;\")",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab exec grill-stats-db-1 -n grill-stats -- psql -U postgres -d \"grill-stats\" -c \"SELECT username FROM users;\")",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab exec grill-stats-db-1 -n grill-stats -- psql -U postgres -d \"grill-stats\" -c \"\\d users\")",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab exec grill-stats-db-1 -n grill-stats -- psql -U postgres -d \"grill-stats\" -c \"SELECT email, name, is_active FROM users;\")",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab logs deployment/grill-stats -n grill-stats --since=2m)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab exec deployment/grill-stats -n grill-stats -- printenv)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab exec grill-stats-db-1 -n grill-stats -- psql -U postgres -d \"grill-stats\" -c \"GRANT SELECT, INSERT, UPDATE, DELETE ON ALL TABLES IN SCHEMA public TO grill_monitor;\")",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab exec grill-stats-db-1 -n grill-stats -- psql -U postgres -d \"grill-stats\" -c \"GRANT USAGE, SELECT ON ALL SEQUENCES IN SCHEMA public TO grill_monitor;\")",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab exec grill-stats-db-1 -n grill-stats -- psql -U postgres -d \"grill-stats\" -c \"ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT SELECT, INSERT, UPDATE, DELETE ON TABLES TO grill_monitor;\")",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab exec grill-stats-db-1 -n grill-stats -- psql -U grill_monitor -d \"grill-stats\" -c \"SELECT email FROM users LIMIT 1;\")",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab get pods -n grill-stats -l app.kubernetes.io/name=grill-stats)",
      "Bash(kubectl --kubeconfig=/mnt/c/Users/lordmuffin/.kube/config --context=healing-organics-cloud-homelab exec deployment/grill-stats -n grill-stats -- python -c \"\nimport os\nprint(''DATABASE_URL:'', os.getenv(''DATABASE_URL''))\nprint(''POSTGRES_USER:'', os.getenv(''POSTGRES_USER''))\nprint(''POSTGRES_PASSWORD:'', os.getenv(''POSTGRES_PASSWORD''))\n\")",
      "Bash(python:*)",
      "Bash(pip install:*)",
      "Bash(npm run build:*)",
      "Bash(npm install:*)",
      "Bash(node:*)",
      "Bash(timeout:*)",
      "Bash(if [ -d \"venv\" ])",
      "Bash(then)",
      "Bash(source:*)",
      "Bash(else)",
      "Bash(fi)",
      "Bash(tree:*)",
      "Bash(kustomize build:*)",
      "mcp__gemini-mcp__gemini_quick_query",
      "mcp__gemini-mcp__gemini_codebase_analysis",
      "Bash(npx tsc:*)",
      "WebFetch(domain:motlin.com)",
      "Bash(/mnt/c/Users/lordmuffin/Claude/Git/claude-cli-launcher scripts test-feature)",
      "Bash(./claude-cli-launcher)",
      "Bash(./claude-cli-launcher --delete)",
      "Bash(./claude-cli-launcher test-repo:*)",
      "Bash(./claude-cli-launcher --delete-all)"
    ],
    "deny": [
      "Bash(rm -rf:*"
    ]
  }
}